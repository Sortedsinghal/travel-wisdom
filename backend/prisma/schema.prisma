// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  password  String
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  bookings Booking[]
  contacts Contact[]

  @@map("users")
}

model Contact {
  id        String   @id @default(cuid())
  fullName  String
  email     String
  phone     String?
  subject   String
  message   String
  status    String   @default("pending") // pending, responded, closed
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  @@map("contacts")
}

model Booking {
  id          String   @id @default(cuid())
  fullName    String
  email       String
  mobile      String
  travelers   Int
  month       String
  message     String?
  status      String   @default("pending") // pending, confirmed, cancelled
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  @@map("bookings")
}

model Blog {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String
  featured    Boolean  @default(false)
  published   Boolean  @default(false)
  author      String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("blogs")
}

model Career {
  id          String   @id @default(cuid())
  title       String
  department  String
  location    String
  type        String   // full-time, part-time, contract
  description String
  requirements String[]
  benefits    String[]
  salary      String?
  status      String   @default("active") // active, closed
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  applications JobApplication[]

  @@unique([title, department])
  @@map("careers")
}

model JobApplication {
  id          String   @id @default(cuid())
  fullName    String
  email       String
  phone       String
  resume      String?  // URL to resume file
  coverLetter String?
  status      String   @default("pending") // pending, reviewed, accepted, rejected
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  careerId String
  career   Career @relation(fields: [careerId], references: [id])

  @@map("job_applications")
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  subscribed Boolean @default(true)
  createdAt DateTime @default(now())

  @@map("newsletters")
}
